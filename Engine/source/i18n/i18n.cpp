// Copyright information can be found in the file named COPYING
// located in the root directory of this distribution.

#include "platform/platform.h"
#include "core/stream/stream.h"
#include "core/stream/fileStream.h"
#include "console/console.h"
#include "console/engineAPI.h"

#include "i18n/i18n.h"
#include "i18n/lang.h"

//-----------------------------------------------------------------------------
// Globals
//-----------------------------------------------------------------------------

// [tom, 3/17/2005] Note: This is created in script
static LangTable *gCoreLangTable = NULL;

// [tom, 3/17/2005] Defined in CoreStringsDefaults.cc, which is generated by langc
//extern const UTF8 *gI18NDefaultStrings[];

// [tom, 5/2/2005] Note: Temporary kludge to keep this compilable while
// the core localization isn't finished.
static const UTF8 *gI18NDefaultStrings[] =
{
	NULL
};

//-----------------------------------------------------------------------------

const UTF8 *getCoreString(S32 id)
{
	if(gCoreLangTable)
		return gCoreLangTable->getString(id);
	else
		return gI18NDefaultStrings[id];
}

//-----------------------------------------------------------------------------

DefineConsoleFunction( getCoreLangTable, S32, (), , "()"
				"@brief Gets the primary LangTable used by the game\n\n"
				"@return ID of the core LangTable\n"
				"@ingroup Localization")
{
	if(gCoreLangTable)
		return gCoreLangTable->getId();
   else
      return 0;
}

DefineConsoleFunction( setCoreLangTable, void, (const char * lgTable), , "(string LangTable)"
				"@brief Sets the primary LangTable used by the game\n\n"
				"@param LangTable ID of the core LangTable\n"
				"@ingroup Localization")
{
	LangTable * lt;
   
   if(Sim::findObject(lgTable, lt))
   { gCoreLangTable = lt; }
   else
   {       
      Con::errorf("setCoreLangTable - Unable to find LanTable '%s'", lgTable); 
   }

}

//-----------------------------------------------------------------------------
