<?php
//-----------------------------------------------------------------------------
// Copyright (c) 2013 GarageGames, LLC
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
//-----------------------------------------------------------------------------

beginSharedLibConfig( 'libsdl2', '{4DB27135-E3B7-48B5-9834-EF863AD93114}' );

   // Source
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/atomic', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/audio', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/audio/disk', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/audio/dummy', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/audio/directsound', false );
   addSrcFile( Generator::getLibSrcDir() . 'sdl/src/audio/xaudio2/SDL_xaudio2.c');
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/audio/winmm', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/core', false );   
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/cpuinfo', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/dynapi', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/events', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/file', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/haptic', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/joystick', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/libm', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/loadso', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/main', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/power', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/render', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/render/direct3d', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/render/opengl', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/render/opengles', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/render/opengles2', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/render/software', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/stdlib', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/test', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/thread', false );
   addSrcFile( Generator::getLibSrcDir() . 'sdl/src/thread/generic/SDL_syscond.c', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/timer', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/video', false );
   addSrcDir( Generator::getLibSrcDir() . 'sdl/src/video/dummy', false );

   // Additional includes
   addLibIncludePath( 'sdl/include' );
   
   addProjectDefine( 'SDL_MAIN_HANDLED' );
   
   if ( Generator::$platform == "win32" )
   {
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/core/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/video/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/timer/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/thread/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/power/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/loadso/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/joystick/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/filesystem/windows', false );
      addSrcDir( Generator::getLibSrcDir() . 'sdl/src/haptic/windows', false );
      
      addProjectLibInput('winmm.lib');
      addProjectLibInput('imm32.lib');
      addProjectLibInput('version.lib');
   }
   
   
endSharedLibConfig();

?>
